@using Botanical.ViewModels.StoreViewModels
@model StoreVM

<!-- introBannerHolder -->
<section class="introBannerHolder d-flex w-100 bgCover" style="background-image: url(http://placehold.it/1920x300);">
    <div class="container">
        <div class="row">
            <div class="col-12 pt-lg-23 pt-md-15 pt-sm-10 pt-6 text-center">
                <h1 class="headingIV fwEbold playfair mb-4">My Wishlist</h1>
                <ul class="list-unstyled breadCrumbs d-flex justify-content-center">
                    <li class="mr-sm-2 mr-1"><a href="home.html">Home</a></li>
                    <li class="mr-sm-2 mr-1">/</li>
                    <li class="mr-sm-2 mr-1"><a href="shop.html">Shop</a></li>
                    <li class="mr-sm-2 mr-1">/</li>
                    <li class="active">My Wishlist</li>
                </ul>
            </div>
        </div>
    </div>
</section>

@if (Model.Products.Any(p => p.IsInWishList))
{
    <div class="cartHolder container pt-xl-21 pb-xl-24 py-lg-20 py-md-16 py-10">
        <div class="row">
            <div class="col-12 table-responsive mb-xl-22 mb-lg-20 mb-md-16 mb-10">
                <table class="table cartTable">
                    <thead>
                        <tr>
                            <th scope="col" class="text-uppercase fwEbold border-top-0">Product</th>
                            <th scope="col" class="text-uppercase fwEbold border-top-0">Price</th>
                            <th scope="col" class="text-uppercase fwEbold border-top-0">Quantity</th>
                            <th scope="col" class="text-uppercase fwEbold border-top-0">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.Products.Where(p => p.IsInWishList))
                        {
                            var price = product.DiscountedPrice > 0 ? product.DiscountedPrice : product.Price;

                            <tr class="align-items-center">
                                <td class="d-flex align-items-center border-top-0 border-bottom px-0 py-6">
                                    <div class="imgHolder">
                                        <img src="~/@product.ImagePath" alt="image description" class="img-fluid" />
                                    </div>
                                    <span class="title pl-2">
                                        <a href="shop-detail.html">@product.Name</a>
                                    </span>
                                </td>
                                <td class="fwEbold border-top-0 border-bottom px-0 py-6 unit-price" data-price="@price">
                                    @price $
                                </td>
                                <td class="border-top-0 border-bottom px-0 py-6">
                                    <input type="number" value="1" min="1" class="quantity-input"
                                           data-product-id="@product.Id"
                                           onchange="updateQuantity(this)" />
                                </td>
                                <td class="fwEbold border-top-0 border-bottom px-0 py-6 total-price">
                                    @price $ <a href="javascript:void(0);" class="fas fa-times float-right"></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Optional: Coupon or Note Form -->
        <div class="row">
            <div class="col-12">
                <form action="javascript:void(0);" class="cartForm mb-5">
                    <div class="form-group mb-0">
                        <label for="note" class="fwEbold text-uppercase d-block mb-1">Add note</label>
                        <textarea id="note" class="form-control"></textarea>
                    </div>
                </form>
            </div>
            <div class="col-12 col-md-6">
                <form action="javascript:void(0);" class="couponForm mb-md-0 mb-5">
                    <fieldset>
                        <div class="mt-holder d-inline-block align-bottom mr-lg-5 mr-0 mb-lg-0 mb-2">
                            <label for="code" class="fwEbold text-uppercase d-block mb-1">Promo Code</label>
                            <input type="text" id="code" class="form-control">
                        </div>
                        <button type="submit" class="btn btnTheme btnCart fwEbold text-center text-white md-round py-3 px-4 py-md-3 px-md-4">Apply</button>
                    </fieldset>
                </form>
            </div>
            <div class="col-12 col-md-6">
                <div class="d-flex justify-content-between">
                    <strong class="txt fwEbold text-uppercase mb-1">Subtotal</strong>
                    <strong class="price fwEbold text-uppercase mb-1" id="subtotal">-- $</strong>
                </div>
                <a href="javascript:void(0);" class="btn btnTheme w-100 fwEbold text-center text-white md-round py-3 px-4 py-md-3 px-md-4">Proceed to checkout</a>
            </div>
        </div>
    </div>
}
else
{
    <p style="text-align:center; font-size:28px; margin-bottom:20px;">No products in your wishlist.</p>
}

<!-- JS to handle price calculation -->
<script>
    function updateTotal(input) {
        const row = input.closest('tr');
        const unitPrice = parseFloat(row.querySelector('.unit-price').dataset.price);
        const totalCell = row.querySelector('.total-price');
        const quantity = parseInt(input.value);

        if (!isNaN(unitPrice) && !isNaN(quantity)) {
            const total = unitPrice * quantity;
            totalCell.innerHTML = `${total.toFixed(2)} $ <a href="javascript:void(0);" class="fas fa-times float-right"></a>`;
            updateSubtotal();
        }
    }

    function updateSubtotal() {
        let subtotal = 0;
        document.querySelectorAll('tbody tr').forEach(row => {
            const unitPrice = parseFloat(row.querySelector('.unit-price').dataset.price);
            const quantity = parseInt(row.querySelector('.quantity-input').value);
            if (!isNaN(unitPrice) && !isNaN(quantity)) {
                subtotal += unitPrice * quantity;
            }
        });
        document.getElementById('subtotal').textContent = `${subtotal.toFixed(2)} $`;
    }

    // Initial subtotal
    document.addEventListener('DOMContentLoaded', updateSubtotal);
</script>
